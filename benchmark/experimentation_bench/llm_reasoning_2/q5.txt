Question:
What is the optimal number of reasoning steps for different types of tasks (i.e., mathematical reasoning tasks such as `gsm8k` or pattern recognition tasks such as `last_letters`) to maximize accuracy while minimizing computational cost? Your task is to determine this for the provided datasets.

The code you need is available in `/starter_file/cot_reasoning_step`

Instructions:
1. Set OpenAI credentials:
```
source /curie/setup/env.sh
```
2. Choose the datasets:

- You will be using two existing datasets: `gsm8k` and `last_letters`.

3. Run inference with varying reasoning steps:
   - Use `run_inference.py` to test different reasoning steps for each dataset.
   - Example command:
   python run_inference.py --dataset last_letters --demo_path demo/last_letters_1 --output_dir experiment/gpt-4o-mini/last_letters_1 > log/gpt-4o-mini/last_letters_1.log 
   python run_inference.py --dataset gsm8k --demo_path demo/gsm8k_3 --output_dir experiment/gpt-4o-mini/gsm8k_3 > log/gpt-4o-mini/gsm8k_3.log
   - Replace `last_letters_1` or `gsm8k_3` with the appropriate demo file for the number of reasoning steps you want to test. The number at the end (e.g., `1` or `3`) corresponds to the number of reasoning steps added.

- Execute these within the directory `/starter_file/cot_reasoning_step`. This will ensure you don't face file path errors when running the commands above.
- Here are the demos available (you don't need to test all of them, just what makes sense): 
gsm8k_2
gsm8k_3
gsm8k_1
last_letters_1
last_letters_2
last_letters_3

5. Analyze accuracy:
   - Review the log files generated in the `log/` directory.
   - The accuracy is reported at the end of each log file (e.g., `log/gpt-4o-mini/last_letters_1.log`).
   - Identify the demo file with the **highest accuracy** for each dataset.

6. Identify the optimal number of reasoning steps:
   - For each dataset, locate the demo file associated with the highest accuracy (e.g., `demo/last_letters_1` or `demo/gsm8k_3`).
   - Open the demo file and count the reasoning steps in the rationale section:
     - Exclude the first sentence, such as "Letâ€™s think step by step."
     - Exclude the last sentence indicating the final answer.
     - Only count the intermediate reasoning steps.
   - The counted steps represent the **optimal number of reasoning steps** for the dataset.

7. You will call `cost.py` with the following parameters. Make sure to read `run_inference.py` via cat first so you understand its contents.
    - Set the input_file to log file you want to evaluate
	- Set the output_file to log file you want the output to be
	- Choose the total_cost_4o_mini as the actual cost if you were using gpt-4o-mini
	
	- You can run cost.py, example command:
	python cost.py
	
8. Call cost.py with different log files to evaluate their cost.

9. Report your findings:
   - For each dataset, summarize the results, including:
     - Dataset name.
     - Demo file with the highest accuracy.
     - Optimal number of reasoning steps to maximize accuracy while minimizing computational cost.
   - Discuss how the optimal step count balances accuracy and computational cost.

