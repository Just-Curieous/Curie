What specific factors contribute to the performance difference, under a fixed compute-bound workload (using sysbench's -cpu-max-prime=80000 test), between AWS EC2 instance types t3a.large and m5.large, which share the same number of vCPUs and memory (i.e., 2 vCPU and 8GB RAM)? There is a known performance difference, with m5.large performing better on this workload. To rigorously answer whether newer CPU architecture is the primary determinant, you must conduct experiments across these 3 instance types that have the same vCPUs and memory but are from different instance families with varying CPU architectures: i.e., t3a.large, m5.large and m6a.large. Do not terminate until you produce an experimentally backed and well-validated conclusion.

Info about t3a.large: AMD EPYC 7000 series processors with an all core turbo clock speed of 2.5 GHz

Info about m5.large: 1st or 2nd generation Intel Xeon Platinum 8000 series processor (Skylake-SP or Cascade Lake) with a sustained all core Turbo CPU clock speed of up to 3.1 GHz

Info about m6a.large (this is also an instance with 2 vCPU and 8 GB RAM): 3rd generation AMD EPYC processors (code named Milan) with an all-core turbo frequency of 3.6 GHz

Make sure to review Cloud/workload setup and code in the following first: /starter_file/cloud_infra/cpu_workload/sysbench_workload